# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import bridge_operator_pb2 as bridge__operator__pb2


class BridgeOperatorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetAnchorSignature = channel.unary_unary(
        '/BridgeOperator/GetAnchorSignature',
        request_serializer=bridge__operator__pb2.Proposals.SerializeToString,
        response_deserializer=bridge__operator__pb2.Approvals.FromString,
        )


class BridgeOperatorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def GetAnchorSignature(self, request, context):
    """Get signatures of anchoring messages on aergo1 and aergo2
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_BridgeOperatorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetAnchorSignature': grpc.unary_unary_rpc_method_handler(
          servicer.GetAnchorSignature,
          request_deserializer=bridge__operator__pb2.Proposals.FromString,
          response_serializer=bridge__operator__pb2.Approvals.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'BridgeOperator', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
