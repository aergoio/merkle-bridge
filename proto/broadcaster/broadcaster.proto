syntax = "proto3";

service Broadcaster {
    // Request execution of a signed transfer
    rpc BridgeTransfer(SignedTransfer) returns (ExecutionStatus) {}
    rpc SimpleTransfer(SignedTransfer) returns (ExecutionStatus) {}

}

message SignedTransfer {
    // Owner transfering tokens
    string owner = 1;
    // Name of the token to transfer
    string token_name = 2;
    // Amount to transfer
    string amount = 3;
    // Nonce to be used by transfer
    uint64 nonce = 4;
    // Signature of the transfer data
    string signature = 5;
    // Fee in tokens to be broadcasted by Broadcaster
    string fee = 6;
    // Blocknumber before which the transfer can be executed
    uint64 deadline = 7;
    // True if a pegged token is being transfered
    bool is_pegged = 8;
    // Optional receiver address used for simple transfers
    // In bridge transfers, the receiver must be same as sender.
    string receiver = 9;
}

message ExecutionStatus {
    // Hash of the locking/burning transaction
    string deposit_tx_hash = 1;
    // Hash of the minting/unlocking transaction
    string withdraw_tx_hash = 2;
    // Hash of the simple transfer transaction
    string transfer_tx_hash = 3;
    // Error message if tx didn't succeed
    string error = 4;
}
